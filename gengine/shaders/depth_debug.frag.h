// header file generated by lasagnaphil
#ifndef  TXT_HEADER_depth_debug_frag_shader
#define  TXT_HEADER_depth_debug_frag_shader


const char depth_debug_frag_shader [] =
"#version 330 core\n"
"out vec4 FragColor;\n"
"\n"
"in vec2 TexCoords;\n"
"\n"
"uniform sampler2D depthMap;\n"
"uniform float near_plane;\n"
"uniform float far_plane;\n"
"\n"
"// required when using a perspective projection matrix\n"
"float LinearizeDepth(float depth)\n"
"{\n"
"    float z = depth * 2.0 - 1.0; // Back to NDC\n"
"    return (2.0 * near_plane * far_plane) / (far_plane + near_plane - z * (far_plane - near_plane));\n"
"}\n"
"\n"
"void main()\n"
"{\n"
"    float depthValue = texture(depthMap, TexCoords).r;\n"
"    // FragColor = vec4(vec3(LinearizeDepth(depthValue) / far_plane), 1.0); // perspective\n"
"    FragColor = vec4(vec3(depthValue), 1.0); // orthographic\n"
"}\n"
;


#endif  // #ifdef TXT_HEADER_depth_debug_frag_shader
